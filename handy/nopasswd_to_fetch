#!/usr/bin/expect -f

set header_exp get_credentials

# Get the real directory of the script, resolving any symlinks
set script_path [file normalize [info script]]
# puts "script path is : $script_path"

# Determine the directory of the real script
set script_directory [file dirname $script_path]

# Source the other Expect script in the same directory
source "$script_directory/$header_exp"

# Set a custom timeout value in seconds (e.g., 180 seconds)
set custom_timeout 180

# Set default branch
set branch main

# Check if an argument is provided
if {$argc > 0} {
    # Access the variable from the command line argument
    set branch [lindex $argv 0]
}

# Spawn your target script or command using the "mode" variable
spawn ssh git@git-van.corp.fortinet.com 2fa_verify

# Set the timeout value for this specific interaction
set timeout $custom_timeout

expect {
    "Username: " {
        send "$username\r"
        exp_continue
    }
    "password:" {
        send "$password\r"
        exp_continue
    }
    "OTP: " {
        # Prompt for and read the FortiToken from the user
        expect_user -re "(.*)\n"
        set token $expect_out(1,string)
        send "$token\r"
    }
    timeout {
        # Handle timeout actions, such as error handling
        puts "Timed out waiting for a response."
        exit 1
    }
}

expect eof

set fetch_cmd "git fetch origin $branch"
# Set the custom prompt
set prompt "$ "

# Spawn a local Bash session
spawn /bin/bash
expect $prompt

# Send a command to the Bash session (change 'ls' to your desired command)
send "pwd\r"
expect $prompt

# Send another command (e.g., 'echo "Hello, world!"')
send "$fetch_cmd\r"
expect $prompt

# Exit the Bash session
send "exit\r"
expect eof
