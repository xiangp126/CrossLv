#!/bin/bash

# if no argumets, exit
# Constants
SCRIPT_NAME=$(basename "$0")
MAGENTA='\033[0;35m'
RESET='\033[0m'

if ! command -v get_credentials &> /dev/null; then
    echo "Error: Command get_credentials not found."
    exit 1
fi

if ! credentials_output=$(eval get_credentials); then
    echo "Error: Failed to get credentials."
    exit 1
fi

mapfile -t credentials <<< "$credentials_output"
ftntUser=${credentials[0]}
ftntPasswd=${credentials[1]}

usage() {
cat << _EOF
$SCRIPT_NAME 1.0

Usage:
    $SCRIPT_NAME [-p] [-d] [-u ECO_ID] [-h]

Options:
    -p  Post the changes to review board
    -d  Show the diff of the changes to be posted
    -u  Update the review board with the new changes
    -h  Display this help message

Examples:
    $SCRIPT_NAME -p
    $SCRIPT_NAME -d
    $SCRIPT_NAME -u 1234
    $SCRIPT_NAME -h

_EOF
    exit 0
}

[[ $# -eq 0 ]] && usage

# getopt to get options -p -d -u -h
while getopts "pdu:h" opt; do
    case ${opt} in
        p)
           spawnCmd="rb_genco_git post"
           ;;
        d)
           spawnCmd="rbt diff"
           ;;
        u)
           rbid=$OPTARG
           spawnCmd="rb_genco_git update $rbid"
           ;;
        h)
           usage
           ;;
        ?)
            echo -e "${MAGENTA}Error: Invalid option: $OPTARG${RESET}" 1>&2
            exit 1
            ;;
    esac
done

shift $((OPTIND - 1))
if [[ $# -gt 0 ]]; then
    COLOR=$MAGENTA
    echo -e "${COLOR}Error: Illegal non-option arguments: $@${RESET}"
    exit
fi

COLOR=$MAGENTA
echo -e "Spawned Command: ${COLOR}$spawnCmd${RESET}"

expect -c "
    spawn -noecho $spawnCmd
    set timeout 60
    expect {
        {yes/no} {
            send \"yes\r\"
            exp_continue
        }
        -re {[Uu]sername} {
            send \"$ftntUser\r\"
            exp_continue
        }
        -re {[Pp]assword} {
            send \"$ftntPasswd\r\"
            exp_continue
        }
        {password for $ftntUser:} {
            send \"$ftntPasswd\r\"
            exp_continue
        }
        eof {
        }
    }
"
