#!/bin/bash

user_notation="@@@@"
banner="---------------------------------"
banner2="------------CURRENT--------------"
banner3="--------------NOW----------------"
username=$(whoami)
hostname=$(hostname)

declare -A gateway_ips=(
    ["fgt1"]="192.168.103.6"
    ["fgt2"]="192.168.103.1"
    ["fgt3"]="192.168.103.4"
    ["fpx1"]="192.168.103.2"
    ["fpx2"]="192.168.103.3"
    ["fpx3"]="192.168.103.5"
    ["host_br1"]="192.168.101.254"
    ["host_br2"]="192.168.102.254"
    ["host_br3"]="192.168.103.254"
    ["host_router"]="172.16.67.1"
)

# To have bidirectional mapping between the keys and values.
declare -A reverse_gateway_ips
for key in "${!gateway_ips[@]}"; do
    reverse_gateway_ips["${gateway_ips[$key]}"]=$key
done

# for key in "${!reverse_gateway_ips[@]}"; do
#     echo "$key => ${reverse_gateway_ips[$key]}"
# done

help() {
    # Extract keys into a separate array and sort them
    sorted_keys=($(for key in "${!gateway_ips[@]}"; do echo "$key"; done | sort))
    echo "Usage: $(basename "$0") <fpx1>"
    echo $banner
    echo "AVAILABLE GATEWAYS TO PICK FROM"
    echo $banner
    for gateway_name in "${sorted_keys[@]}"; do
        echo "[$gateway_name == ${gateway_ips[$gateway_name]}]"
    done
    echo $banner2
    echo "$user_notation default via $current_gw_ip(${reverse_gateway_ips[$current_gw_ip]}) dev $device"
    exit 1
}

read -r current_gw_ip device <<< $(ip route show default | awk '/default/ {print $3, $5}')

# In Bash, =~ is used for regular expression matching
if [[ "$username" != "corsair" || ! "$hostname" =~ ^client[0-9]+$ || "$OSTYPE" != "linux-gnu" ]]; then
    echo "$user_notation Username: $username"
    echo "$user_notation Hostname: $hostname"
    echo "$user_notation OSTYPE: $OSTYPE"
    echo "$user_notation This script is only for client VMs and the username corsair and the os platform to be Linux"
    help
fi

if [[ -z $1 ]]; then
    help
else
    new_gateway_ip=${gateway_ips[$1]}
    if [[ -z $new_gateway_ip ]]; then
        echo "$user_notation Error: Gateway name not found"
        exit 1
    fi
fi

echo "$user_notation Changing the default gateway to $new_gateway_ip"

if [ "$current_gw_ip" = "$new_gateway_ip" ]; then
    echo "$user_notation The default gateway is already set to $new_gateway_ip(${reverse_gateway_ips[$new_gateway_ip]})"
    exit 0
fi

# Change the default gateway
echo "$user_notation sudo ip route replace default via $new_gateway_ip"
sudo ip route replace default via "$new_gateway_ip"
if [ $? -ne 0 ]; then
    echo "Failed to change the default gateway"
    exit 1
fi

# ip route show default
# @@@@ default via 172.16.67.1 dev enp0s31f6 proto static metric 100
echo "$user_notation Default gateway has been changed successfully"
read -r new_gateway_ip device <<< $(ip route show default | awk '/default/ {print $3, $5}')
echo $banner3
echo "$user_notation default via $new_gateway_ip(${reverse_gateway_ips[$new_gateway_ip]}) dev $device"
