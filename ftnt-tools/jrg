#!/bin/bash

scriptName=$(basename $0)
userNotation="@@@@"
fUseVim=false
EDITOR="code"

usage() {
    cat << _EOF_
$scriptName v0.0

Usage: $scriptName [-m] <search term>

Options:
    -v: open the file in vim (default is code)

Example: $scriptName "search term"
         $scriptName -m "search term"

Notice: The search term must be the last argument!

_EOF_
    exit 1
}

[[ $# -eq 0 ]] && usage

# parse the arguments, -v is for vim, -c is for code
while getopts "hm" opt; do
    case ${opt} in
        m)
            fUseVim=true
            ;;
        h)
            usage
            ;;
        \?)
            echo "Invalid option: $OPTARG" 1>&2
            exit 1
            ;;
    esac
done

shift $((OPTIND -1))
if [ $# -eq 0 ]; then
    echo "$userNotation No search term provided"
    exit 1
fi

query="$@"
# wad_ssl_sock_port_exec_up_forward_txn:17850
query_polished=$(echo "$query" | sed 's/\\//g' | cut -d: -f1)

result=$(rg --smart-case \
            --color=ansi \
            --colors 'match:fg:204,51,153' --colors 'match:style:bold' \
            --line-number --no-heading "$query_polished" |
        fzf --ansi \
            --color 'hl:-1:underline,hl+:-1:underline:reverse' \
            --delimiter ':' \
            --preview "bat --color=always {1} --theme='TwoDark' --highlight-line {2}" \
            --preview-window 'top,60%,border-bottom,+{2}+3/3,~3' \
            --cycle \
            --query "$query_polished")

if [ -z "$result" ]; then
    echo "$userNotation No match found for: $query_polished"
    exit 1
fi

file="${result%%:*}"
linenumber=$(echo "${result}" | cut -d: -f2)

if [ "$fUseVim" = true ]; then
    EDITOR="vim"
    $EDITOR +"${linenumber}" "$file"
    exit 0
fi

if ! command -v $EDITOR &> /dev/null; then
    echo "$userNotation $EDITOR is not installed"
    exit 1
fi
$EDITOR "$file":"$linenumber"
