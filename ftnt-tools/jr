#!/bin/bash

scriptName=$(basename $0)
fUseVim=false
EDITOR="code"

# The user notation
USER_NOTATION="@@@@"

usage() {
    cat << _EOF_
$scriptName v0.0

Usage: $scriptName [vz] <search term>

Options:
    -v  Open the file in vim (default is $EDITOR)
    -z  Search with empty query

Example: $scriptName "search term"
         $scriptName -z

Notice: The search term must be the last argument!

_EOF_
    exit 1
}

[[ $# -eq 0 ]] && usage

query="$@"

# parse the arguments, -v is for vim, -c is for code
while getopts "hvz" opt; do
    case ${opt} in
        v)
            fUseVim=true
            ;;
        z)
            query=""
            ;;
        h)
            usage
            ;;
        ?)
            echo "Invalid option: $OPTARG" 1>&2
            exit 1
            ;;
    esac
done

# OPTIND is a special variable used by getopts
# that keeps track of the next index in the positional parameters to be processed.
# After processing options, OPTIND will point to the first non-option argument.
shift $((OPTIND -1))
# [[ $# -gt 1 ]] && usage

preCheck() {
    if ! command -v rg &> /dev/null; then
        echo "$USER_NOTATION ripgrep is not installed"
        exit 1
    fi

    if ! command -v fzf &> /dev/null; then
        echo "$USER_NOTATION fzf is not installed"
        exit 1
    fi

    if ! command -v bat &> /dev/null; then
        echo "$USER_NOTATION bat is not installed"
        exit 1
    fi
}

preCheck

# wad_ssl_sock_port_exec_up_forward_txn:17850 => wad_ssl_sock_port_exec_up_forward_txn
query_polished=$(echo "$query" | sed 's/\\//g' | cut -d: -f1)

# write the three check into a function
result=$(rg --smart-case \
            --color=ansi \
            --colors 'match:fg:204,51,153' --colors 'match:style:bold' \
            --line-number --no-heading "$query_polished" |
        fzf --ansi \
            --color 'hl:-1:underline,hl+:-1:underline:reverse' \
            --delimiter ':' \
            --preview "bat --color=always {1} --theme='TwoDark' --highlight-line {2}" \
            --preview-window 'top,60%,border-bottom,+{2}+3/3,~3' \
            --cycle \
            --query "$query_polished")

# The sample value of result is:
# daemon/wad/wad_app_eng.c:3071:          goto session_make_failed;
if [ -z "$result" ]; then
    exit 0
fi

file="${result%%:*}"
linenumber=$(echo "${result}" | cut -d: -f2)

if [ "$fUseVim" = true ]; then
    EDITOR="vim"
    $EDITOR +"${linenumber}" "$file"
    exit 0
fi

if ! command -v $EDITOR &> /dev/null; then
    echo "$USER_NOTATION $EDITOR is not installed"
    exit 1
fi
$EDITOR "$file":"$linenumber"
