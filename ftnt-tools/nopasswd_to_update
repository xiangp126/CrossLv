#!/usr/bin/expect -f

set header_exp get_credentials

# Get the real directory of the script, resolving any symlinks
set script_path [file normalize [info script]]
# puts "script path is : $script_path"

# Determine the directory of the real script
set script_directory [file dirname $script_path]

# Source the other Expect script in the same directory
source "$script_directory/$header_exp"

# Set a custom timeout value in seconds (e.g., 180 seconds)
set custom_timeout 180

# Check if an argument is provided
if {$argc < 1} {
    # Print a help message because no arguments were provided
    puts "Usage: nopasswd_to_update <Review_Board ID>"
    puts "Exp. nopasswd_to_update 262292"
    exit 1  ;# Exit the script with an error status code
}

set rbid [lindex $argv 0]

# Spawn your target script or command using the "rbid" variable
spawn rb_genco_git update $rbid

# Set the timeout value for this specific interaction
set timeout $custom_timeout

expect {
    "Username: " {
        send "$ftnt_username\r"
        exp_continue
    }
    "Password: " {
        send "$ftnt_password\r"
        exp_continue
    }
    "Password for '$ftnt_username': " {
        send "$ftnt_password\r"
        exp_continue
    }
    timeout {
        # Handle timeout actions, such as error handling
        puts "Timed out waiting for a response."
        exit 1
    }
}

# Continue with the script or additional interactions

