#!/bin/bash

user_notation="@@@@"
banner="---------------------------------"
banner2="------------CURRENT--------------"
banner3="--------------NOW----------------"
username=$(whoami)
hostname=$(hostname)
# In Bash, =~ is used for regular expression matching
if [[ "$username" != "corsair" || ! "$hostname" =~ ^client[0-9]+$ || "$OSTYPE" != "linux-gnu" ]]; then
    echo "$user_notation Username: $username"
    echo "$user_notation Hostname: $hostname"
    echo "$user_notation OSTYPE: $OSTYPE"
    echo "$user_notation This script is only for client VMs and the username corsair and the os platform to be Linux"
    # exit 1
fi

declare -A gateway_ips=(
    ["fgt1"]="192.168.103.6"
    ["fgt2"]="192.168.103.1"
    ["fgt3"]="192.168.103.4"
    ["fpx1"]="192.168.103.2"
    ["fpx2"]="192.168.103.3"
    ["fpx3"]="192.168.103.5"
    ["host_br1"]="192.168.101.254"
    ["host_br2"]="192.168.102.254"
    ["host_br3"]="192.168.103.254"
    ["host_router"]="172.16.67.1"
)

help() {
    # Extract keys into a separate array and sort them
    sorted_keys=($(for key in "${!gateway_ips[@]}"; do echo "$key"; done | sort))
    echo "Usage: $(basename "$0") <gateway_name>, e.g., $(basename "$0") fpx1"
    echo $banner
    echo "AVAILABLE GATEWAYS TO PICK FROM"
    echo $banner
    for gateway_name in "${sorted_keys[@]}"; do
        echo "$gateway_name => ${gateway_ips[$gateway_name]}"
    done
    echo $banner2
    echo "$user_notation $current_default"
    exit 1
}

current_default=$(ip route show default)
current_gateway=$(ip route show default | awk '/default/ {print $3}')

if [[ -z $1 ]]; then
    help
else
    new_gateway=${gateway_ips[$1]}
    if [[ -z $new_gateway ]]; then
        echo "$user_notation Error: Gateway name not found"
        exit 1
    fi
fi

echo "$user_notation Changing the default route to $new_gateway"

if [ "$current_gateway" = "$new_gateway" ]; then
    echo "$user_notation The default route is already set to $new_gateway"
    exit 0
fi

# Change the default route
echo "$user_notation sudo ip route replace default via $new_gateway"
sudo ip route replace default via "$new_gateway"
if [ $? -ne 0 ]; then
    echo "Failed to change the default route"
    exit 1
fi
echo "$user_notation Default route has been changed successfully"
echo $banner3
ip route show default
